"use strict";
var helpers = require("../../../../.npm/_npx/b4a9aa12c0cf34a6/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  function _typeof(obj) {
    "@babel/helpers - typeof";
    if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
      _typeof = function _typeof(obj) {
        return typeof obj;
      };
    } else {
      _typeof = function _typeof(obj) {
        return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
      };
    }
    return _typeof(obj);
  }
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.MainView = void 0;
  var _react = _interopRequireDefault(require("react"));
  var _axios = _interopRequireDefault(require("axios"));
  var _movieCard = require("../movie-card/movie-card");
  var _movieView = require("../movie-view/movie-view");
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if (("value" in descriptor)) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
  }
  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || (function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    });
    return _setPrototypeOf(o, p);
  }
  function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct();
    return function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived), result;
      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor;
        result = Reflect.construct(Super, arguments, NewTarget);
      } else {
        result = Super.apply(this, arguments);
      }
      return _possibleConstructorReturn(this, result);
    };
  }
  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === "object" || typeof call === "function")) {
      return call;
    }
    return _assertThisInitialized(self);
  }
  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self;
  }
  function _isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;
    try {
      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }
  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
  }
  var MainView = /*#__PURE__*/(function (_React$Component) {
    _inherits(MainView, _React$Component);
    var _super = _createSuper(MainView);
    function MainView() {
      var _this;
      _classCallCheck(this, MainView);
      _this = _super.call(this);
      _this.state = {
        movies: null,
        selectedMovie: null
      };
      return _this;
    }
    _createClass(MainView, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;
        _axios["default"].get('https://best-flix-10922.herokuapp.com/movies').then(function (response) {
          // Assign the result to the state
          _this2.setState({
            movies: response.data
          });
        })["catch"](function (error) {
          console.log(error);
        });
      }
    }, {
      key: "onHomeClick",
      value: function onHomeClick() {
        this.setState({
          selectedMovie: null
        });
      }
    }, {
      key: "onMovieClick",
      value: function onMovieClick(movie) {
        this.setState({
          selectedMovie: movie
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;
        // If the state isn't initialized, this will throw on runtime
        // before the data is initially loaded
        var _this$state = this.state, movies = _this$state.movies, selectedMovie = _this$state.selectedMovie;
        // before the movies have been loaded
        if (!movies) return (
          /*#__PURE__*/_react["default"].createElement("div", {
            className: "main-view"
          })
        );
        return (
          /*#__PURE__*/_react["default"].createElement("div", {
            className: "main-view"
          }, selectedMovie ? /*#__PURE__*/_react["default"].createElement(_movieView.MovieView, {
            movie: selectedMovie,
            onClick: function onClick() {
              return _this3.onHomeClick();
            }
          }) : movies.map(function (movie) {
            return (
              /*#__PURE__*/_react["default"].createElement(_movieCard.MovieCard, {
                key: movie._id,
                movie: movie,
                onClick: function onClick(movie) {
                  return _this3.onMovieClick(movie);
                }
              })
            );
          }))
        );
      }
    }]);
    return MainView;
  })(_react["default"].Component);
  exports.MainView = MainView;
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
